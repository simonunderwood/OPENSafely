study = StudyDefinition(
    # define default dummy data behaviour
    default_expectations={
        "date": {"earliest": "1970-01-01", "latest": "today"},
        "rate": "uniform",
        "incidence": 0.2,
    },

    # define the study index date
    index_date="2022-18-01",

    # define the study population
    population=patients.satisfying(
        '(registered = "1") AND (has_RA OR has_PA OR has_UC) AND (has_diabetes OR has_CAD OR (age > "65") OR (smokingstatus = "S" OR smokingstatus = "E"))',
        has_RA=patients.with_these_clinical_events(
            RA_codes, on_or_before="index_date"),
        has_PA=patients.with_these_clinical_events(
            RPA_codes, on_or_before="index_date"),
        has_UC=patients.with_these_clinical_events(
            UC_codes, on_or_before="index_date"),
        has_diabetes=patients.with_these_clinical_events(
            (diabetes_t1_codes OR diabetes_t2_codes), on_or_before_"index_date"),
        has_CAD=patients.with_these_clinical_events(
            CAD_codes, on_or_before="index_date"),
        age=patients.age_as_of(
            "index_date", 
            return_expectations={
            "rate": "universal",
            "int": {"distribution": "population_ages"}, }, 
            ),
        ),
        
        registered=patients.registered_as_of(
        "index_date",
        return_expectations={"incidence":0.98}
        ),
        smoking_status=patients.categorised_as(
        {
            "S": "most_recent_smoking_code = 'S'",
            "E": """
                 most_recent_smoking_code = 'E' OR (
                   most_recent_smoking_code = 'N' AND ever_smoked
                 )
            """,
            "N": "most_recent_smoking_code = 'N' AND NOT ever_smoked",
            "M": "DEFAULT",
        },
        return_expectations={
            "category": {"ratios": {"S": 0.6, "E": 0.1, "N": 0.2, "M": 0.1}}
        },
        most_recent_smoking_code=patients.with_these_clinical_events(
            clear_smoking_codes,
            find_last_match_in_period=True,
            on_or_before="2020-02-01",
            returning="category",
        ),
        ever_smoked=patients.with_these_clinical_events(
            filter_codes_by_category(clear_smoking_codes, include=["S", "E"]),
            on_or_before="2020-02-01",
        ),
    ), 

# define the study variables

region=registered_practice_as_of(
    "index_date",
     returning="nuts1_region_name",
     )
     
